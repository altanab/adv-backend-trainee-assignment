// Code generated by MockGen. DO NOT EDIT.
// Source: adv/internal/pkg/advert (interfaces: AdvertRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	advert "adv/internal/pkg/advert"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAdvertRepository is a mock of AdvertRepository interface.
type MockAdvertRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAdvertRepositoryMockRecorder
}

// MockAdvertRepositoryMockRecorder is the mock recorder for MockAdvertRepository.
type MockAdvertRepositoryMockRecorder struct {
	mock *MockAdvertRepository
}

// NewMockAdvertRepository creates a new mock instance.
func NewMockAdvertRepository(ctrl *gomock.Controller) *MockAdvertRepository {
	mock := &MockAdvertRepository{ctrl: ctrl}
	mock.recorder = &MockAdvertRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdvertRepository) EXPECT() *MockAdvertRepositoryMockRecorder {
	return m.recorder
}

// CreateAdvert mocks base method.
func (m *MockAdvertRepository) CreateAdvert(arg0 advert.Advert) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdvert", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAdvert indicates an expected call of CreateAdvert.
func (mr *MockAdvertRepositoryMockRecorder) CreateAdvert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdvert", reflect.TypeOf((*MockAdvertRepository)(nil).CreateAdvert), arg0)
}

// GetAdvert mocks base method.
func (m *MockAdvertRepository) GetAdvert(arg0 int) (advert.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdvert", arg0)
	ret0, _ := ret[0].(advert.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdvert indicates an expected call of GetAdvert.
func (mr *MockAdvertRepositoryMockRecorder) GetAdvert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdvert", reflect.TypeOf((*MockAdvertRepository)(nil).GetAdvert), arg0)
}

// GetAdverts mocks base method.
func (m *MockAdvertRepository) GetAdverts(arg0 int, arg1, arg2 string, arg3 int) ([]advert.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdverts", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]advert.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdverts indicates an expected call of GetAdverts.
func (mr *MockAdvertRepositoryMockRecorder) GetAdverts(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdverts", reflect.TypeOf((*MockAdvertRepository)(nil).GetAdverts), arg0, arg1, arg2, arg3)
}
