// Code generated by MockGen. DO NOT EDIT.
// Source: adv/internal/pkg/advert (interfaces: AdvertUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	advert "adv/internal/pkg/advert"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAdvertUsecase is a mock of AdvertUsecase interface.
type MockAdvertUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAdvertUsecaseMockRecorder
}

// MockAdvertUsecaseMockRecorder is the mock recorder for MockAdvertUsecase.
type MockAdvertUsecaseMockRecorder struct {
	mock *MockAdvertUsecase
}

// NewMockAdvertUsecase creates a new mock instance.
func NewMockAdvertUsecase(ctrl *gomock.Controller) *MockAdvertUsecase {
	mock := &MockAdvertUsecase{ctrl: ctrl}
	mock.recorder = &MockAdvertUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdvertUsecase) EXPECT() *MockAdvertUsecaseMockRecorder {
	return m.recorder
}

// CreateAdvert mocks base method.
func (m *MockAdvertUsecase) CreateAdvert(arg0 advert.Advert) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdvert", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAdvert indicates an expected call of CreateAdvert.
func (mr *MockAdvertUsecaseMockRecorder) CreateAdvert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdvert", reflect.TypeOf((*MockAdvertUsecase)(nil).CreateAdvert), arg0)
}

// GetAdvert mocks base method.
func (m *MockAdvertUsecase) GetAdvert(arg0 int, arg1 bool) (advert.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdvert", arg0, arg1)
	ret0, _ := ret[0].(advert.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdvert indicates an expected call of GetAdvert.
func (mr *MockAdvertUsecaseMockRecorder) GetAdvert(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdvert", reflect.TypeOf((*MockAdvertUsecase)(nil).GetAdvert), arg0, arg1)
}

// GetAdverts mocks base method.
func (m *MockAdvertUsecase) GetAdverts(arg0 int, arg1, arg2 string) ([]advert.Advert, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdverts", arg0, arg1, arg2)
	ret0, _ := ret[0].([]advert.Advert)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdverts indicates an expected call of GetAdverts.
func (mr *MockAdvertUsecaseMockRecorder) GetAdverts(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdverts", reflect.TypeOf((*MockAdvertUsecase)(nil).GetAdverts), arg0, arg1, arg2)
}
